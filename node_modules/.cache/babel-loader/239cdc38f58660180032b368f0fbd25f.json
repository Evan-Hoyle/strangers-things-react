{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\karat\\\\OneDrive\\\\Desktop\\\\Cal Poly Workshops\\\\strangers-things-react\\\\src\\\\components\\\\AccountForm.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { Link } from 'react-router-dom';\n\nconst AccountForm = ({\n  type,\n  setToken,\n  setUser\n}) => {\n  _s();\n\n  const [username, setUsername] = useState('');\n  const [password, setPassword] = useState('');\n  const title = type === 'login' ? 'Login' : 'Register';\n  const oppositeTitle = type === 'login' ? 'Register' : 'Login';\n  const oppositeType = type === 'login' ? 'register' : 'login';\n\n  const handleSubmit = async ev => {\n    ev.preventDefault();\n    console.log('username: ', username);\n    console.log('password: ', password);\n    const response = await fetch(`https://strangers-things.herokuapp.com/api/2010-CPU-RM-WEB-PT/users/${type}`, {\n      // or use the `/users/login` route for login!\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        user: {\n          username,\n          password\n        }\n      })\n    });\n    console.log('response: ', response);\n    const {\n      data\n    } = await response.json();\n    console.log('{data}: ', {\n      data\n    });\n    const token = data === null || data === void 0 ? void 0 : data.token;\n    console.log('token: ', token);\n\n    if (token) {\n      setToken(token);\n      const response = await fetch(`https://strangers-things.herokuapp.com/api/2010-CPU-RM-WEB-PT/users/me`, {\n        method: 'GET',\n        headers: {\n          'Authorization': `Bearer ${token}`\n        }\n      });\n      const {\n        data\n      } = await response.json();\n      console.log('data: ', data);\n      setUser(data);\n    }\n\n    setUsername('');\n    setPassword('');\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: title\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: username,\n        onChange: ev => setUsername(ev.target.value),\n        placeholder: \"username\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"password\",\n        value: password,\n        onChange: ev => setPassword(ev.target.value),\n        placeholder: \"password\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(Link, {\n      to: `/${oppositeType}`,\n      children: oppositeTitle\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 5\n    }, this)]\n  }, void 0, true);\n};\n\n_s(AccountForm, \"wuQOK7xaXdVz4RMrZQhWbI751Oc=\");\n\n_c = AccountForm;\nexport default AccountForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"AccountForm\");","map":{"version":3,"sources":["C:/Users/karat/OneDrive/Desktop/Cal Poly Workshops/strangers-things-react/src/components/AccountForm.js"],"names":["React","useState","Link","AccountForm","type","setToken","setUser","username","setUsername","password","setPassword","title","oppositeTitle","oppositeType","handleSubmit","ev","preventDefault","console","log","response","fetch","method","headers","body","JSON","stringify","user","data","json","token","target","value"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\r\nimport {Link} from 'react-router-dom'; \r\n\r\nconst AccountForm = ({type, setToken, setUser}) => {\r\n  const [username, setUsername] = useState('');\r\n  const [password, setPassword] = useState('');\r\n  const title = type === 'login' ? 'Login' : 'Register';\r\n  const oppositeTitle = type === 'login' ? 'Register' : 'Login';\r\n  const oppositeType = type === 'login' ? 'register' : 'login';\r\n\r\n\r\n  const handleSubmit = async (ev) => {\r\n    ev.preventDefault();\r\n    console.log('username: ', username);\r\n    console.log('password: ', password);\r\n    const response = await fetch(`https://strangers-things.herokuapp.com/api/2010-CPU-RM-WEB-PT/users/${type}`, { // or use the `/users/login` route for login!\r\n      method: 'POST',\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n      },\r\n      body: JSON.stringify({\r\n        user: {\r\n          username,\r\n          password\r\n        }\r\n      })\r\n    });\r\n    console.log('response: ', response);\r\n    const {data} = await response.json();\r\n    console.log('{data}: ', {data});\r\n    const token = data?.token;\r\n    console.log('token: ', token);\r\n    if (token) {\r\n      setToken(token);\r\n      const response = await fetch(`https://strangers-things.herokuapp.com/api/2010-CPU-RM-WEB-PT/users/me`, {\r\n        method: 'GET',\r\n        headers: {\r\n          'Authorization': `Bearer ${token}`,\r\n        },\r\n      });\r\n      const {data} = await response.json();\r\n      console.log('data: ', data);\r\n      setUser(data);\r\n    }\r\n    setUsername('');\r\n    setPassword('');\r\n  }\r\n\r\n  return <>\r\n    <h2>{title}</h2>\r\n    <form onSubmit={handleSubmit}>\r\n      <input type=\"text\" value={username} onChange={(ev) => setUsername(ev.target.value)}placeholder=\"username\"></input>\r\n      <input type=\"password\" value={password} onChange={(ev) => setPassword(ev.target.value)}placeholder=\"password\"></input>\r\n      <button type=\"submit\">{title}</button>\r\n    </form>    \r\n    <Link to={`/${oppositeType}`}>{oppositeTitle}</Link>\r\n  </>\r\n}\r\n\r\nexport default AccountForm;"]},"metadata":{},"sourceType":"module"}